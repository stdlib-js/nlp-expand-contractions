// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
function e(e){return Object.keys(Object(e))}var t=void 0!==Object.keys;var n="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function o(){return n&&"symbol"==typeof Symbol.toStringTag}var r=Object.prototype.toString;var l=Object.prototype.hasOwnProperty;function a(e,t){return null!=e&&l.call(e,t)}var i="function"==typeof Symbol?Symbol.toStringTag:"";var u=o()?function(e){var t,n,o;if(null==e)return r.call(e);n=e[i],t=a(e,i);try{e[i]=void 0}catch(t){return r.call(e)}return o=r.call(e),t?e[i]=n:delete e[i],o}:function(e){return r.call(e)};function h(e){return"[object Arguments]"===u(e)}var v=function(){return h(arguments)}(),s="function"==typeof Object.defineProperty?Object.defineProperty:null;var d,w=Object.defineProperty,c=Object.prototype,f=c.toString,y=c.__defineGetter__,p=c.__defineSetter__,m=c.__lookupGetter__,g=c.__lookupSetter__;d=function(){try{return s({},"x",{}),!0}catch(e){return!1}}()?w:function(e,t,n){var o,r,l,a;if("object"!=typeof e||null===e||"[object Array]"===f.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof n||null===n||"[object Array]"===f.call(n))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+n+"`.");if((r="value"in n)&&(m.call(e,t)||g.call(e,t)?(o=e.__proto__,e.__proto__=c,delete e[t],e[t]=n.value,e.__proto__=o):e[t]=n.value),l="get"in n,a="set"in n,r&&(l||a))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return l&&y&&y.call(e,t,n.get),a&&p&&p.call(e,t,n.set),e};var b=d;function I(e,t,n){b(e,t,{configurable:!1,enumerable:!1,writable:!1,value:n})}function S(e){return"string"==typeof e}var _=String.prototype.valueOf;var j=o();function O(e){return"object"==typeof e&&(e instanceof String||(j?function(e){try{return _.call(e),!0}catch(e){return!1}}(e):"[object String]"===u(e)))}function A(e){return S(e)||O(e)}function C(e){return"number"==typeof e}I(A,"isPrimitive",S),I(A,"isObject",O);var D=Number,M=D.prototype.toString;var T=o();function E(e){return"object"==typeof e&&(e instanceof D||(T?function(e){try{return M.call(e),!0}catch(e){return!1}}(e):"[object Number]"===u(e)))}function N(e){return C(e)||E(e)}function P(e){return e!=e}function Y(e){return C(e)&&P(e)}function V(e){return E(e)&&P(e.valueOf())}function B(e){return Y(e)||V(e)}I(N,"isPrimitive",C),I(N,"isObject",E),I(B,"isPrimitive",Y),I(B,"isObject",V);var k=Number.POSITIVE_INFINITY,W=D.NEGATIVE_INFINITY,L=Math.floor;function F(e){return L(e)===e}function G(e){return e<k&&e>W&&F(e)}function J(e){return C(e)&&G(e)}function x(e){return E(e)&&G(e.valueOf())}function R(e){return J(e)||x(e)}I(R,"isPrimitive",J),I(R,"isObject",x);var H=Object.prototype.propertyIsEnumerable;var K=!H.call("beep","0");function U(e,t){var n;return null!=e&&(!(n=H.call(e,t))&&K&&A(e)?!Y(t=+t)&&J(t)&&t>=0&&t<e.length:n)}var X=Array.isArray?Array.isArray:function(e){return"[object Array]"===u(e)};var z=v?h:function(e){return null!==e&&"object"==typeof e&&!X(e)&&"number"==typeof e.length&&F(e.length)&&e.length>=0&&e.length<=4294967295&&a(e,"callee")&&!U(e,"callee")},$=Array.prototype.slice;function q(e){return null!==e&&"object"==typeof e}I(q,"isObjectLikeArray",function(e){if("function"!=typeof e)throw new TypeError("invalid argument. Must provide a function. Value: `"+e+"`.");return function(t){var n,o;if(!X(t))return!1;if(0===(n=t.length))return!1;for(o=0;o<n;o++)if(!1===e(t[o]))return!1;return!0}}(q));var Q=U((function(){}),"prototype"),Z=!U({toString:null},"toString");function ee(e){return"object"==typeof e&&null!==e&&"number"==typeof e.length&&F(e.length)&&e.length>=0&&e.length<=9007199254740991}function te(e,t,n){var o,r;if(!ee(e)&&!S(e))throw new TypeError("invalid argument. First argument must be an array-like object. Value: `"+e+"`.");if(0===(o=e.length))return-1;if(3===arguments.length){if(!J(n))throw new TypeError("invalid argument. `fromIndex` must be an integer. Value: `"+n+"`.");if(n>=0){if(n>=o)return-1;r=n}else(r=o+n)<0&&(r=0)}else r=0;if(B(t)){for(;r<o;r++)if(B(e[r]))return r}else for(;r<o;r++)if(e[r]===t)return r;return-1}var ne=/./;function oe(e){return"boolean"==typeof e}var re=Boolean.prototype.toString;var le=o();function ae(e){return"object"==typeof e&&(e instanceof Boolean||(le?function(e){try{return re.call(e),!0}catch(e){return!1}}(e):"[object Boolean]"===u(e)))}function ie(e){return oe(e)||ae(e)}function ue(){return new Function("return this;")()}I(ie,"isPrimitive",oe),I(ie,"isObject",ae);var he="object"==typeof self?self:null,ve="object"==typeof window?window:null,se="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},de="object"==typeof se?se:null;var we=function(e){if(arguments.length){if(!oe(e))throw new TypeError("invalid argument. Must provide a boolean primitive. Value: `"+e+"`.");if(e)return ue()}if(he)return he;if(ve)return ve;if(de)return de;throw new Error("unexpected error. Unable to resolve global object.")}(),ce=we.document&&we.document.childNodes,fe=Int8Array;function ye(){return/^\s*function\s*([^(]*)/i}var pe=/^\s*function\s*([^(]*)/i;function me(e){var t,n,o,r;if(("Object"===(n=u(e).slice(8,-1))||"Error"===n)&&e.constructor){if("string"==typeof(o=e.constructor).name)return o.name;if(t=pe.exec(o.toString()))return t[1]}return q(r=e)&&(r._isBuffer||r.constructor&&"function"==typeof r.constructor.isBuffer&&r.constructor.isBuffer(r))?"Buffer":n}I(ye,"REGEXP",pe);var ge="function"==typeof ne||"object"==typeof fe||"function"==typeof ce?function(e){return me(e).toLowerCase()}:function(e){var t;return null===e?"null":"object"===(t=typeof e)?me(e).toLowerCase():t};function be(e){return e.constructor&&e.constructor.prototype===e}var Ie=["console","external","frame","frameElement","frames","innerHeight","innerWidth","outerHeight","outerWidth","pageXOffset","pageYOffset","parent","scrollLeft","scrollTop","scrollX","scrollY","self","webkitIndexedDB","webkitStorageInfo","window"],Se="undefined"==typeof window?void 0:window;var _e=function(){var e;if("undefined"===ge(Se))return!1;for(e in Se)try{-1===te(Ie,e)&&a(Se,e)&&null!==Se[e]&&"object"===ge(Se[e])&&be(Se[e])}catch(e){return!0}return!1}(),je="undefined"!=typeof window;var Oe,Ae=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"];function Ce(e){var t;return!(!S(e)||""===e)&&((t=e[0])===function(e){if(!S(e))throw new TypeError("invalid argument. Must provide a primitive string. Value: `"+e+"`.");return e.toUpperCase()}(t)&&t!==function(e){if(!S(e))throw new TypeError("invalid argument. Must provide a primitive string. Value: `"+e+"`.");return e.toLowerCase()}(t))}function De(e){if(!S(e))throw new TypeError("invalid argument. First argument must be a string primitive. Value: `"+e+"`.");return""===e?"":e.charAt(0).toLowerCase()+e.slice(1)}function Me(e){if(!S(e))throw new TypeError("invalid argument. First argument must be a string primitive. Value: `"+e+"`.");return""===e?"":e.charAt(0).toUpperCase()+e.slice(1)}Oe=t?function(){return 2!==(e(arguments)||"").length}(1,2)?function(t){return z(t)?e($.call(t)):e(t)}:e:function(e){var t,n,o,r,l,i,u;if(r=[],z(e)){for(u=0;u<e.length;u++)r.push(u.toString());return r}if("string"==typeof e){if(e.length>0&&!a(e,"0"))for(u=0;u<e.length;u++)r.push(u.toString())}else{if(!1==(o="function"==typeof e)&&!q(e))return r;n=Q&&o}for(l in e)n&&"prototype"===l||!a(e,l)||r.push(String(l));if(Z)for(t=function(e){if(!1===je&&!_e)return be(e);try{return be(e)}catch(e){return!1}}(e),u=0;u<Ae.length;u++)i=Ae[u],t&&"constructor"===i||!a(e,i)||r.push(String(i));return r};var Te={"i.e.":["i.e."],"I.e.":["I.e."],"I.E.":["I.E."],"e.g.":["e.g."],"E.g.":["E.g."],"E.G.":["E.G."],"et al.":["et al."],"etc.":["etc."],"vs.":["vs."],"A.S.A.P":["A.S.A.P"],"E.T.A.":["E.T.A."],"D.I.Y":["D.I.Y"],"R.S.V.P":["R.S.V.P"],"P.S.":["P.S."],"B.Y.O.B":["B.Y.O.B"],"Ms.":["Ms."],"Mr.":["Mr."],"Dr.":["Dr."],"Prof.":["Prof."],"Mrs.":["Mrs."],"Messrs.":["Messrs."],"Gov.":["Gov."],"Gen.":["Gen."],"Lt.":["Lt."],"Col.":["Col."],"Mt.":["Mt."],"Bros.":["Bros."],"Corp.":["Corp."],"Co.":["Co."],"co.":["co."],"Inc.":["Inc."],"Ltd.":["Ltd."],"Rep.":["Rep."],"Sen.":["Sen."],"Jr.":["Jr."],"Sr.":["Sr."],"Ph.D.":["Ph.D."],"J.D.":["J.D."],"M.D.":["M.D."],"Rev.":["Rev."],"Adm.":["Adm."],"St.":["St."],"a.m.":["a.m."],"p.m.":["p.m."],"b.c.":["b.c."],"B.C.":["B.C."],"a.d.":["a.d."],"A.D.":["A.D."],"b.c.e.":["b.c.e."],"B.C.E.":["B.C.E."],"Jan.":["Jan."],"Feb.":["Feb."],"Mar.":["Mar."],"Apr.":["Apr."],"May.":["May."],"Jun.":["Jun."],"Jul.":["Jul."],"Aug.":["Aug."],"Sep.":["Sep."],"Sept.":["Sept."],"Oct.":["Oct."],"Nov.":["Nov."],"Dec.":["Dec."],"Ala.":["Ala."],"Ariz.":["Ariz."],"Ark.":["Ark."],"Calif.":["Calif."],"Colo.":["Colo."],"Conn.":["Conn."],"Del.":["Del."],"D.C.":["D.C."],"Fla.":["Fla."],"Ga.":["Ga."],"Ill.":["Ill."],"Ind.":["Ind."],"Kans.":["Kans."],"Kan.":["Kan."],"Ky.":["Ky."],"La.":["La."],"Md.":["Md."],"Mass.":["Mass."],"Mich.":["Mich."],"Minn.":["Minn."],"Miss.":["Miss."],"Mo.":["Mo."],"Mont.":["Mont."],"Nebr.":["Nebr."],"Neb.":["Neb."],"Nev.":["Nev."],"N.H.":["N.H."],"N.J.":["N.J."],"N.M.":["N.M."],"N.Y.":["N.Y."],"N.C.":["N.C."],"N.D.":["N.D."],"Okla.":["Okla."],"Ore.":["Ore."],"Pa.":["Pa."],"Tenn.":["Tenn."],"Va.":["Va."],"Wash.":["Wash."],"Wis.":["Wis."]},Ee={"^_^":["^_^"],"=D":["=D"],";-p":[";-p"],":O":[":O"],":-/":[":-/"],xD:["xD"],V_V:["V_V"],";(":[";("],"(:":["(:"],'")':['")'],":Y":[":Y"],":]":[":]"],":3":[":3"],":(":[":("],":-)":[":-)"],"=3":["=3"],":))":[":))"],":>":[":>"],";p":[";p"],":p":[":p"],"=[[":["=[["],xDD:["xDD"],"<333":["<333"],"<33":["<33"],":P":[":P"],"o.O":["o.O"],"<3":["<3"],";-)":[";-)"],":)":[":)"],"-_-":["-_-"],":')":[":')"],o_O:["o_O"],";)":[";)"],"=]":["=]"],"(=":["(="],"-__-":["-__-"],":/":[":/"],":0":[":0"],"(^_^)":["(^_^)"],";D":[";D"],o_o:["o_o"],":((":[":(("],"=)":["=)"]},Ne={"'s":["'s"],"'S":["'S"],"ain't":["ai","n't"],aint:["ai","nt"],"Ain't":["Ai","n't"],"aren't":["are","n't"],arent:["are","nt"],"Aren't":["Are","n't"],"can't":["ca","n't"],cant:["ca","nt"],"Can't":["Ca","n't"],"can't've":["ca","n't","'ve"],"'cause":["'cause'"],cannot:["can","not"],Cannot:["Can","not"],"could've":["could","'ve"],couldve:["could","ve"],"Could've":["Could","'ve"],"couldn't":["could","n't"],couldnt:["could","nt"],"Couldn't":["Could","n't"],"couldn't've":["could","n't","'ve"],couldntve:["could","nt","ve"],"Couldn't've":["Could","n't","'ve"],"didn't":["did","n't"],didnt:["did","nt"],"Didn't":["Did","n't"],"doesn't":["does","n't"],doesnt:["does","nt"],"Doesn't":["Does","n't"],"don't":["do","n't"],dont:["do","nt"],"Don't":["Do","n't"],"hadn't":["had","n't"],hadnt:["had","nt"],"Hadn't":["Had","n't"],"hadn't've":["had","n't","'ve"],"hasn't":["has","n't"],hasnt:["has","nt"],"haven't":["have","n't"],havent:["have","nt"],"he'd":["he","'d"],hed:["he","d"],"he'd've":["he","'d","'ve"],hedve:["he","d","ve"],"he'll":["he","'ll"],"he'll've":["he","'ll","'ve"],"he's":["he","'s"],hes:["he","s"],"how'd":["how","'d"],howd:["how","d"],"how'd'y":["how","'d","'y"],"how'll":["how","'ll"],howll:["how","ll"],"how's":["how","'s"],hows:["how","s"],"I'd":["I","'d"],"I'd've":["I","'d","'ve"],"I'll":["I","'ll"],"i'll":["i","'ll"],"I'll've":["I","'ll","'ve"],"i'll've":["i","'ll","'ve"],"I'm":["I","'m"],"i'm":["i","'m"],Im:["I","m"],im:["i","m"],"I'ma":["I","'ma"],"i'ma":["i","'ma"],"I've":["I","'ve"],"i've":["i","'ve"],"isn't":["is","n't"],isnt:["is","nt"],"Isn't":["Is","n't"],"It'd":["It","'d"],"it'd":["it","'d"],"it'd've":["it","'d","'ve"],"it'll've":["it","'ll","'ve"],"it'll":["it","'ll"],itll:["it","ll"],"it's":["it","'s"],"let's":["let","'s"],lets:["let","s"],"ma'am":["ma'am"],"mayn't":["may","n't"],"mightn't":["might","n't"],"mightn't've":["might","n't","'ve"],"might've":["might","'ve"],"mustn't":["must","n't"],"mustn't've":["must","n't","'ve"],"must've":["must","'ve"],"needn't":["need","n't"],"needn't've":["need","n't","'ve"],"not've":["not","'ve"],"o'clock":["o'clock"],"oughtn't":["ought","n't"],"oughtn't've":["ought","n't","'ve"],"so've":["so","'ve"],"so's":["so","'s"],"shan't":["sha","n't"],"sha'n't":["sha'","n't"],"shan't've":["sha","n't","'ve"],"she'd":["she","'d"],"she'd've":["she","'d","'ve"],"she'll":["she","'ll"],"she'll've":["she","'ll","'ve"],"she's":["she","'s"],"should've":["should","'ve"],"shouldn't":["should","n't"],"shouldn't've":["should","n't","'ve"],"that'd":["that","'d"],"that'd've":["that","'d","'ve"],"that's":["that","'s"],thats:["that","s"],"there'd":["there","'d"],"there'd've":["there","'d","'ve"],"there's":["there","'s"],"they'd":["they","'d"],"They'd":["They","'d"],"they'd've":["they","'d","'ve"],"They'd've":["They","'d","'ve"],"they'll":["they","'ll"],"They'll":["They","'ll"],"they'll've":["they","'ll","'ve"],"They'll've":["They","'ll","'ve"],"they're":["they","'re"],"They're":["They","'re"],"they've":["they","'ve"],"They've":["They","'ve"],"to've":["to","'ve"],"wasn't":["was","n't"],"we'd":["we","'d"],"We'd":["We","'d"],"we'd've":["we","'d","'ve"],"we'll":["we","'ll"],"We'll":["We","'ll"],"we'll've":["we","'ll","'ve"],"We'll've":["We","'ll","'ve"],"we're":["we","'re"],"We're":["We","'re"],"we've":["we","'ve"],"We've":["We","'ve"],"weren't":["were","n't"],"what'll":["what","'ll"],"what'll've":["what","'ll","'ve"],"what're":["what","'re"],"what's":["what","'s"],"what've":["what","'ve"],"when's":["when","'s"],"when've":["when","'ve"],"where'd":["where","'d"],"where's":["where","'s"],"where've":["where","'ve"],"who'd":["who","'d"],"who'll":["who","'ll"],"who'll've":["who","'ll'","'ve'"],"who're":["who","'re"],"who's":["who","'s"],"who've":["who","'ve"],"why've":["why","'ve"],"why'll":["why","'ll"],"why're":["why","'re"],"why's":["why","'s"],"will've":["will","'ve"],"won't":["wo","n't"],wont:["wo","nt"],"won't've":["wo","n't","'ve"],"would've":["would","'ve"],"wouldn't":["would","n't"],"wouldn't've":["would","n't","'ve"],"y'all":["y'","all"],"y'all'd":["y'","all","'d"],"y'all'd've":["y'","all","'d","'ve"],"y'all're":["y'","all","'re'"],"y'all've":["y'","all","ve"],"you'd":["you","'d"],"You'd":["You","'d"],"you'd've":["you","'d","'ve"],"You'd've":["You","'d","'ve"],"you'll":["you","'ll"],"You'll":["You","'ll"],"you'll've":["you","'ll","'ve"],"You'll've":["You","'ll","'ve"],"you're":["you","'re"],"You're":["You","'re"],"you've":["you","'ve"],"You've":["You","'ve"]},Pe=/^([,([{*<"“'`‘.])/gi,Ye=/([,.!?%*>:;"'”`)\]}])$/gi;function Ve(e,t){var n;for(n=0;n<t.length;n++)e.push(t[n]);return e}function Be(e){var t,n,o,r=[],l=[];do{Ee[e]||Te[e]||Ne[e]?n=!0:(t=e.split(Pe)).length>1?(r.push(t[1]),e=t[2]):(t=e.split(Ye)).length>1?(e=t[0],l.push(t[1])):n=!0}while(!n);return(o=r).push(e),Ve(o,l),o}var ke={"'s":"is","'S":"Is","aren't":"are not",arent:"are not","can't":"can not",cant:"can not","can't've":"can not have","'cause":"because",cannot:"can not","could've":"could have",couldve:"could have","couldn't":"could not",couldnt:"could not","couldn't've":"could not have",couldntve:"could not have","didn't":"did not",didnt:"did not","doesn't":"does not",doesnt:"does not","don't":"do not",dont:"do not","hadn't":"had not",hadnt:"had not","hadn't've":"had not have","hasn't":"has not",hasnt:"has not","haven't":"have not",havent:"have not","he'd":"he would",hed:"he would","he'd've":"he would have",hedve:"he would have","he'll":"he will","he'll've":"he will have","he's":"he is",hes:"he is","how'd":"how did",howd:"how did","how'd'y":"how did you","how'll":"how will",howll:"how will","how's":"how is",hows:"how is","i'd":"i would","i'd've":"i would have","i'll":"i will","i'll've":"i will have","i'm":"i am",im:"i am","i'ma":"i am going to","i've":"i have","isn't":"is not",isnt:"is not","it'd":"it would","it'd've":"it would have","it'll've":"it will have","it'll":"it will",itll:"it will","it's":"it is","let's":"let us",lets:"let us","ma'am":"madam","mayn't":"may not","mightn't":"it might not","mightn't've":"might not have","might've":"might have","mustn't":"must not","mustn't've":"must not have","must've":"must have","needn't":"need not","needn't've":"need not have","not've":"not have","oughtn't":"ought not","oughtn't've":"ought not to have","so've":"so have","so's":"so is","shan't":"shall not","sha'n't":"shall not","shan't've":"shall not have","she'd":"she would","she'd've":"she would have","she'll":"she will","she'll've":"she will have","she's":"she is","should've":"should have","shouldn't":"should not","shouldn't've":"should not have","that'd":"that would","that'd've":"that would have","that's":"that is",thats:"that is","there'd":"there would","there'd've":"there would have","there's":"there is","they'd":"they would","they'd've":"they would have","they'll":"they will","they'll've":"they will have","they're":"they are","they've":"they have","to've":"to have","wasn't":"was not","we'd":"we would","we'd've":"we would have","we'll":"we will","we'll've":"we will have","we're":"we are","we've":"we have","weren't":"were not","what'll":"what will","what'll've":"what will have","what're":"what are","what's":"what has/is","what've":"what have","when's":"when is","when've":"when have","where'd":"where would","where's":"where is","where've":"where have","who'd":"who would","who'll":"who will","who'll've":"who will have","who're":"who are","who's":"who is","who've":"who have","why've":"why have","why'll":"why will","why're":"why are","why's":"why is","will've":"will have","won't":"will not",wont:"will not","won't've":"will not have","would've":"would have","wouldn't":"would not","wouldn't've":"would not have","y'all":"you all","y'all'd":"you all would","y'all'd've":"you all would have","y'all're":"you all are","y'all've":"you all have","you'd":"you would","you'd've":"you would have","you'll":"you will","you'll've":"you will have","you're":"you are","you've":"you have"},We=Oe(ke);function Le(e){var t,n,o,r,l,i;if(!S(e))throw new TypeError(function(){var e,t=arguments,n="https://stdlib.io/e/"+t[0]+"?";for(e=1;e<t.length;e++)n+="&arg[]="+encodeURIComponent(t[e]);return n}("0N93N",e));for(o="",t=function(e,t){var n,o,r,l,i,u;if(!S(e))throw new TypeError("invalid argument. First argument must be a string primitive. Value: `"+e+"`.");if(arguments.length>1&&!oe(t))throw new TypeError("invalid argument. Second argument must be a boolean primitive. Value: `"+t+"`.");if(!e)return[];for(o=t?e.split(/(\s+)/):e.split(/\s+/),i={},r=[],u=0;u<o.length;u++)a(i,l=o[u])?Ve(r,i[l]):(Ve(r,n=Be(l)),i[l]=n);return r}(e,!0),l=0;l<t.length;l++){if(Ce(n=t[l])){for(i=0;i<We.length;i++)if(r=We[i],De(n)===r){n=Me(ke[r]);break}}else for(i=0;i<We.length;i++)if(n===(r=We[i])){n=ke[r];break}o+=n}return o}export{Le as default};
//# sourceMappingURL=mod.js.map
